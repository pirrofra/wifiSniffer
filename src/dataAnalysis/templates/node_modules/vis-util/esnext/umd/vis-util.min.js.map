{"version":3,"file":"vis-util.min.js","sources":["../../src/util.ts","../../src/random/alea.ts"],"sourcesContent":["// utility functions\n\n// parse ASP.Net Date pattern,\n// for example '/Date(1198908717056)/' or '/Date(1198908717056-0700)/'\n// code from http://momentjs.com/\nconst ASPDateRegex = /^\\/?Date\\((-?\\d+)/i;\n\n// Color REs\nconst fullHexRE = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i;\nconst shortHexRE = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\nconst rgbRE = /^rgb\\( *(1?\\d{1,2}|2[0-4]\\d|25[0-5]) *, *(1?\\d{1,2}|2[0-4]\\d|25[0-5]) *, *(1?\\d{1,2}|2[0-4]\\d|25[0-5]) *\\)$/i;\nconst rgbaRE = /^rgba\\( *(1?\\d{1,2}|2[0-4]\\d|25[0-5]) *, *(1?\\d{1,2}|2[0-4]\\d|25[0-5]) *, *(1?\\d{1,2}|2[0-4]\\d|25[0-5]) *, *([01]|0?\\.\\d+) *\\)$/i;\n\n/**\n * Hue, Saturation, Value.\n */\nexport interface HSV {\n  /**\n   * Hue \\<0, 1\\>.\n   */\n  h: number;\n  /**\n   * Saturation \\<0, 1\\>.\n   */\n  s: number;\n  /**\n   * Value \\<0, 1\\>.\n   */\n  v: number;\n}\n\n/**\n * Red, Green, Blue.\n */\nexport interface RGB {\n  /**\n   * Red \\<0, 255\\> integer.\n   */\n  r: number;\n  /**\n   * Green \\<0, 255\\> integer.\n   */\n  g: number;\n  /**\n   * Blue \\<0, 255\\> integer.\n   */\n  b: number;\n}\n\n/**\n * Red, Green, Blue, Alpha.\n */\nexport interface RGBA {\n  /**\n   * Red \\<0, 255\\> integer.\n   */\n  r: number;\n  /**\n   * Green \\<0, 255\\> integer.\n   */\n  g: number;\n  /**\n   * Blue \\<0, 255\\> integer.\n   */\n  b: number;\n  /**\n   * Alpha \\<0, 1\\>.\n   */\n  a: number;\n}\n\n/**\n * Test whether given object is a number.\n *\n * @param value - Input value of unknown type.\n *\n * @returns True if number, false otherwise.\n */\nexport function isNumber(value: unknown): value is number {\n  return value instanceof Number || typeof value === \"number\";\n}\n\n/**\n * Remove everything in the DOM object.\n *\n * @param DOMobject - Node whose child nodes will be recursively deleted.\n */\nexport function recursiveDOMDelete(DOMobject: Node | null | undefined): void {\n  if (DOMobject) {\n    while (DOMobject.hasChildNodes() === true) {\n      const child = DOMobject.firstChild;\n      if (child) {\n        recursiveDOMDelete(child);\n        DOMobject.removeChild(child);\n      }\n    }\n  }\n}\n\n/**\n * Test whether given object is a string.\n *\n * @param value - Input value of unknown type.\n *\n * @returns True if string, false otherwise.\n */\nexport function isString(value: unknown): value is string {\n  return value instanceof String || typeof value === \"string\";\n}\n\n/**\n * Test whether given object is a object (not primitive or null).\n *\n * @param value - Input value of unknown type.\n *\n * @returns True if not null object, false otherwise.\n */\nexport function isObject(value: unknown): value is object {\n  return typeof value === \"object\" && value !== null;\n}\n\n/**\n * Test whether given object is a Date, or a String containing a Date.\n *\n * @param value - Input value of unknown type.\n *\n * @returns True if Date instance or string date representation, false otherwise.\n */\nexport function isDate(value: unknown): value is Date | string {\n  if (value instanceof Date) {\n    return true;\n  } else if (isString(value)) {\n    // test whether this string contains a date\n    const match = ASPDateRegex.exec(value);\n    if (match) {\n      return true;\n    } else if (!isNaN(Date.parse(value))) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\n/**\n * Copy property from b to a if property present in a.\n * If property in b explicitly set to null, delete it if `allowDeletion` set.\n *\n * Internal helper routine, should not be exported. Not added to `exports` for that reason.\n *\n * @param a - Target object.\n * @param b - Source object.\n * @param prop - Name of property to copy from b to a.\n * @param allowDeletion - If true, delete property in a if explicitly set to null in b.\n */\nfunction copyOrDelete(\n  a: any,\n  b: any,\n  prop: string,\n  allowDeletion: boolean\n): void {\n  let doDeletion = false;\n  if (allowDeletion === true) {\n    doDeletion = b[prop] === null && a[prop] !== undefined;\n  }\n\n  if (doDeletion) {\n    delete a[prop];\n  } else {\n    a[prop] = b[prop]; // Remember, this is a reference copy!\n  }\n}\n\n/**\n * Fill an object with a possibly partially defined other object.\n *\n * Only copies values for the properties already present in a.\n * That means an object is not created on a property if only the b object has it.\n *\n * @param a - The object that will have it's properties updated.\n * @param b - The object with property updates.\n * @param allowDeletion - If true, delete properties in a that are explicitly set to null in b.\n */\nexport function fillIfDefined<T extends object>(\n  a: T,\n  b: Partial<T>,\n  allowDeletion = false\n): void {\n  // NOTE: iteration of properties of a\n  // NOTE: prototype properties iterated over as well\n  for (const prop in a) {\n    if (b[prop] !== undefined) {\n      if (b[prop] === null || typeof b[prop] !== \"object\") {\n        // Note: typeof null === 'object'\n        copyOrDelete(a, b, prop, allowDeletion);\n      } else {\n        const aProp = a[prop];\n        const bProp = b[prop];\n        if (isObject(aProp) && isObject(bProp)) {\n          fillIfDefined(aProp, bProp, allowDeletion);\n        }\n      }\n    }\n  }\n}\n\n/**\n * Copy the values of all of the enumerable own properties from one or more source objects to a\n * target object. Returns the target object.\n *\n * @param target - The target object to copy to.\n * @param source - The source object from which to copy properties.\n *\n * @returns The target object.\n */\nexport const extend = Object.assign;\n\n/**\n * Extend object a with selected properties of object b or a series of objects.\n *\n * @remarks\n * Only properties with defined values are copied.\n *\n * @param props - Properties to be copied to a.\n * @param a - The target.\n * @param others - The sources.\n *\n * @returns Argument a.\n */\nexport function selectiveExtend(\n  props: string[],\n  a: any,\n  ...others: any[]\n): any {\n  if (!Array.isArray(props)) {\n    throw new Error(\"Array with property names expected as first argument\");\n  }\n\n  for (const other of others) {\n    for (let p = 0; p < props.length; p++) {\n      const prop = props[p];\n      if (other && Object.prototype.hasOwnProperty.call(other, prop)) {\n        a[prop] = other[prop];\n      }\n    }\n  }\n  return a;\n}\n\n/**\n * Extend object a with selected properties of object b.\n * Only properties with defined values are copied.\n *\n * @remarks\n * Previous version of this routine implied that multiple source objects could\n * be used; however, the implementation was **wrong**. Since multiple (\\>1)\n * sources weren't used anywhere in the `vis.js` code, this has been removed\n *\n * @param props - Names of first-level properties to copy over.\n * @param a - Target object.\n * @param b - Source object.\n * @param allowDeletion - If true, delete property in a if explicitly set to null in b.\n *\n * @returns Argument a.\n */\nexport function selectiveDeepExtend(\n  props: string[],\n  a: any,\n  b: any,\n  allowDeletion = false\n): any {\n  // TODO: add support for Arrays to deepExtend\n  if (Array.isArray(b)) {\n    throw new TypeError(\"Arrays are not supported by deepExtend\");\n  }\n\n  for (let p = 0; p < props.length; p++) {\n    const prop = props[p];\n    if (Object.prototype.hasOwnProperty.call(b, prop)) {\n      if (b[prop] && b[prop].constructor === Object) {\n        if (a[prop] === undefined) {\n          a[prop] = {};\n        }\n        if (a[prop].constructor === Object) {\n          deepExtend(a[prop], b[prop], false, allowDeletion);\n        } else {\n          copyOrDelete(a, b, prop, allowDeletion);\n        }\n      } else if (Array.isArray(b[prop])) {\n        throw new TypeError(\"Arrays are not supported by deepExtend\");\n      } else {\n        copyOrDelete(a, b, prop, allowDeletion);\n      }\n    }\n  }\n  return a;\n}\n\n/**\n * Extend object `a` with properties of object `b`, ignoring properties which\n * are explicitly specified to be excluded.\n *\n * @remarks\n * The properties of `b` are considered for copying. Properties which are\n * themselves objects are are also extended. Only properties with defined\n * values are copied.\n *\n * @param propsToExclude - Names of properties which should *not* be copied.\n * @param a - Object to extend.\n * @param b - Object to take properties from for extension.\n * @param allowDeletion - If true, delete properties in a that are explicitly\n * set to null in b.\n *\n * @returns Argument a.\n */\nexport function selectiveNotDeepExtend(\n  propsToExclude: string[],\n  a: any,\n  b: any,\n  allowDeletion = false\n): any {\n  // TODO: add support for Arrays to deepExtend\n  // NOTE: array properties have an else-below; apparently, there is a problem here.\n  if (Array.isArray(b)) {\n    throw new TypeError(\"Arrays are not supported by deepExtend\");\n  }\n\n  for (const prop in b) {\n    if (!Object.prototype.hasOwnProperty.call(b, prop)) {\n      continue;\n    } // Handle local properties only\n    if (propsToExclude.indexOf(prop) !== -1) {\n      continue;\n    } // In exclusion list, skip\n\n    if (b[prop] && b[prop].constructor === Object) {\n      if (a[prop] === undefined) {\n        a[prop] = {};\n      }\n      if (a[prop].constructor === Object) {\n        deepExtend(a[prop], b[prop]); // NOTE: allowDeletion not propagated!\n      } else {\n        copyOrDelete(a, b, prop, allowDeletion);\n      }\n    } else if (Array.isArray(b[prop])) {\n      a[prop] = [];\n      for (let i = 0; i < b[prop].length; i++) {\n        a[prop].push(b[prop][i]);\n      }\n    } else {\n      copyOrDelete(a, b, prop, allowDeletion);\n    }\n  }\n\n  return a;\n}\n\n/**\n * Deep extend an object a with the properties of object b.\n *\n * @param a - Target object.\n * @param b - Source object.\n * @param protoExtend - If true, the prototype values will also be extended.\n * (That is the options objects that inherit from others will also get the\n * inherited options).\n * @param allowDeletion - If true, the values of fields that are null will be deleted.\n *\n * @returns Argument a.\n */\nexport function deepExtend(\n  a: any,\n  b: any,\n  protoExtend = false,\n  allowDeletion = false\n): any {\n  for (const prop in b) {\n    if (Object.prototype.hasOwnProperty.call(b, prop) || protoExtend === true) {\n      if (\n        typeof b[prop] === \"object\" &&\n        b[prop] !== null &&\n        Object.getPrototypeOf(b[prop]) === Object.prototype\n      ) {\n        if (a[prop] === undefined) {\n          a[prop] = deepExtend({}, b[prop], protoExtend); // NOTE: allowDeletion not propagated!\n        } else if (\n          typeof a[prop] === \"object\" &&\n          a[prop] !== null &&\n          Object.getPrototypeOf(a[prop]) === Object.prototype\n        ) {\n          deepExtend(a[prop], b[prop], protoExtend); // NOTE: allowDeletion not propagated!\n        } else {\n          copyOrDelete(a, b, prop, allowDeletion);\n        }\n      } else if (Array.isArray(b[prop])) {\n        a[prop] = b[prop].slice();\n      } else {\n        copyOrDelete(a, b, prop, allowDeletion);\n      }\n    }\n  }\n  return a;\n}\n\n/**\n * Test whether all elements in two arrays are equal.\n *\n * @param a - First array.\n * @param b - Second array.\n *\n * @returns True if both arrays have the same length and same elements (1 = '1').\n */\nexport function equalArray(a: unknown[], b: unknown[]): boolean {\n  if (a.length !== b.length) {\n    return false;\n  }\n\n  for (let i = 0, len = a.length; i < len; i++) {\n    if (a[i] != b[i]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Get the type of an object, for example exports.getType([]) returns 'Array'.\n *\n * @param object - Input value of unknown type.\n *\n * @returns Detected type.\n */\nexport function getType(object: unknown): string {\n  const type = typeof object;\n\n  if (type === \"object\") {\n    if (object === null) {\n      return \"null\";\n    }\n    if (object instanceof Boolean) {\n      return \"Boolean\";\n    }\n    if (object instanceof Number) {\n      return \"Number\";\n    }\n    if (object instanceof String) {\n      return \"String\";\n    }\n    if (Array.isArray(object)) {\n      return \"Array\";\n    }\n    if (object instanceof Date) {\n      return \"Date\";\n    }\n\n    return \"Object\";\n  }\n  if (type === \"number\") {\n    return \"Number\";\n  }\n  if (type === \"boolean\") {\n    return \"Boolean\";\n  }\n  if (type === \"string\") {\n    return \"String\";\n  }\n  if (type === undefined) {\n    return \"undefined\";\n  }\n\n  return type;\n}\n\nexport function copyAndExtendArray<T>(arr: readonly T[], newValue: T): T[];\nexport function copyAndExtendArray<A, V>(\n  arr: readonly A[],\n  newValue: V\n): (A | V)[];\n/**\n * Used to extend an array and copy it. This is used to propagate paths recursively.\n *\n * @param arr - First part.\n * @param newValue - The value to be aadded into the array.\n *\n * @returns A new array with all items from arr and newValue (which is last).\n */\nexport function copyAndExtendArray<A, V>(\n  arr: readonly A[],\n  newValue: V\n): (A | V)[] {\n  return [...arr, newValue];\n}\n\n/**\n * Used to extend an array and copy it. This is used to propagate paths recursively.\n *\n * @param arr - The array to be copied.\n *\n * @returns Shallow copy of arr.\n */\nexport function copyArray<T>(arr: readonly T[]): T[] {\n  return arr.slice();\n}\n\n/**\n * Retrieve the absolute left value of a DOM element.\n *\n * @param elem - A dom element, for example a div.\n *\n * @returns The absolute left position of this element in the browser page.\n */\nexport function getAbsoluteLeft(elem: Element): number {\n  return elem.getBoundingClientRect().left;\n}\n\n/**\n * Retrieve the absolute right value of a DOM element.\n *\n * @param elem - A dom element, for example a div.\n *\n * @returns The absolute right position of this element in the browser page.\n */\nexport function getAbsoluteRight(elem: Element): number {\n  return elem.getBoundingClientRect().right;\n}\n\n/**\n * Retrieve the absolute top value of a DOM element.\n *\n * @param elem - A dom element, for example a div.\n *\n * @returns The absolute top position of this element in the browser page.\n */\nexport function getAbsoluteTop(elem: Element): number {\n  return elem.getBoundingClientRect().top;\n}\n\n/**\n * Add a className to the given elements style.\n *\n * @param elem - The element to which the classes will be added.\n * @param classNames - Space separated list of classes.\n */\nexport function addClassName(elem: Element, classNames: string): void {\n  let classes = elem.className.split(\" \");\n  const newClasses = classNames.split(\" \");\n  classes = classes.concat(\n    newClasses.filter(function(className): boolean {\n      return classes.indexOf(className) < 0;\n    })\n  );\n  elem.className = classes.join(\" \");\n}\n\n/**\n * Remove a className from the given elements style.\n *\n * @param elem - The element from which the classes will be removed.\n * @param classNames - Space separated list of classes.\n */\nexport function removeClassName(elem: Element, classNames: string): void {\n  let classes = elem.className.split(\" \");\n  const oldClasses = classNames.split(\" \");\n  classes = classes.filter(function(className): boolean {\n    return oldClasses.indexOf(className) < 0;\n  });\n  elem.className = classes.join(\" \");\n}\n\nexport function forEach<V>(\n  array: undefined | null | V[],\n  callback: (value: V, index: number, object: V[]) => void\n): void;\nexport function forEach<O extends object>(\n  object: undefined | null | O,\n  callback: <Key extends keyof O>(value: O[Key], key: Key, object: O) => void\n): void;\n/**\n * For each method for both arrays and objects.\n * In case of an array, the built-in Array.forEach() is applied (**No, it's not!**).\n * In case of an Object, the method loops over all properties of the object.\n *\n * @param object - An Object or Array to be iterated over.\n * @param callback - Array.forEach-like callback.\n */\nexport function forEach(object: any, callback: any): void {\n  if (Array.isArray(object)) {\n    // array\n    const len = object.length;\n    for (let i = 0; i < len; i++) {\n      callback(object[i], i, object);\n    }\n  } else {\n    // object\n    for (const key in object) {\n      if (Object.prototype.hasOwnProperty.call(object, key)) {\n        callback(object[key], key, object);\n      }\n    }\n  }\n}\n\n/**\n * Convert an object into an array: all objects properties are put into the array. The resulting array is unordered.\n *\n * @param o - Object that contains the properties and methods.\n *\n * @returns An array of unordered values.\n */\nexport const toArray = Object.values;\n\n/**\n * Update a property in an object.\n *\n * @param object - The object whose property will be updated.\n * @param key - Name of the property to be updated.\n * @param value - The new value to be assigned.\n *\n * @returns Whether the value was updated (true) or already strictly the same in the original object (false).\n */\nexport function updateProperty<K extends string, V>(\n  object: Record<K, V>,\n  key: K,\n  value: V\n): boolean {\n  if (object[key] !== value) {\n    object[key] = value;\n    return true;\n  } else {\n    return false;\n  }\n}\n\n/**\n * Throttle the given function to be only executed once per animation frame.\n *\n * @param fn - The original function.\n *\n * @returns The throttled function.\n */\nexport function throttle(fn: () => void): () => void {\n  let scheduled = false;\n\n  return (): void => {\n    if (!scheduled) {\n      scheduled = true;\n      requestAnimationFrame((): void => {\n        scheduled = false;\n        fn();\n      });\n    }\n  };\n}\n\n/**\n * Add and event listener. Works for all browsers.\n *\n * @param element - The element to bind the event listener to.\n * @param action - Same as Element.addEventListener(action, —, —).\n * @param listener - Same as Element.addEventListener(—, listener, —).\n * @param useCapture - Same as Element.addEventListener(—, —, useCapture).\n */\nexport function addEventListener<E extends Element>(\n  element: E,\n  action: Parameters<E[\"addEventListener\"]>[0],\n  listener: Parameters<E[\"addEventListener\"]>[1],\n  useCapture?: Parameters<E[\"addEventListener\"]>[2]\n): void {\n  if (element.addEventListener) {\n    if (useCapture === undefined) {\n      useCapture = false;\n    }\n\n    if (\n      action === \"mousewheel\" &&\n      navigator.userAgent.indexOf(\"Firefox\") >= 0\n    ) {\n      action = \"DOMMouseScroll\"; // For Firefox\n    }\n\n    element.addEventListener(action, listener, useCapture);\n  } else {\n    // @TODO: IE types? Does anyone care?\n    (element as any).attachEvent(\"on\" + action, listener); // IE browsers\n  }\n}\n\n/**\n * Remove an event listener from an element.\n *\n * @param element - The element to bind the event listener to.\n * @param action - Same as Element.removeEventListener(action, —, —).\n * @param listener - Same as Element.removeEventListener(—, listener, —).\n * @param useCapture - Same as Element.removeEventListener(—, —, useCapture).\n */\nexport function removeEventListener<E extends Element>(\n  element: E,\n  action: Parameters<E[\"removeEventListener\"]>[0],\n  listener: Parameters<E[\"removeEventListener\"]>[1],\n  useCapture?: Parameters<E[\"removeEventListener\"]>[2]\n): void {\n  if (element.removeEventListener) {\n    // non-IE browsers\n    if (useCapture === undefined) {\n      useCapture = false;\n    }\n\n    if (\n      action === \"mousewheel\" &&\n      navigator.userAgent.indexOf(\"Firefox\") >= 0\n    ) {\n      action = \"DOMMouseScroll\"; // For Firefox\n    }\n\n    element.removeEventListener(action, listener, useCapture);\n  } else {\n    // @TODO: IE types? Does anyone care?\n    (element as any).detachEvent(\"on\" + action, listener); // IE browsers\n  }\n}\n\n/**\n * Cancels the event's default action if it is cancelable, without stopping further propagation of the event.\n *\n * @param event - The event whose default action should be prevented.\n */\nexport function preventDefault(event: Event | undefined): void {\n  if (!event) {\n    event = window.event;\n  }\n\n  if (!event) {\n    // No event, no work.\n  } else if (event.preventDefault) {\n    event.preventDefault(); // non-IE browsers\n  } else {\n    // @TODO: IE types? Does anyone care?\n    (event as any).returnValue = false; // IE browsers\n  }\n}\n\n/**\n * Get HTML element which is the target of the event.\n *\n * @param event - The event.\n *\n * @returns The element or null if not obtainable.\n */\nexport function getTarget(\n  event: Event | undefined = window.event\n): Element | null {\n  // code from http://www.quirksmode.org/js/events_properties.html\n  // @TODO: EventTarget can be almost anything, is it okay to return only Elements?\n\n  let target: null | EventTarget = null;\n  if (!event) {\n    // No event, no target.\n  } else if (event.target) {\n    target = event.target;\n  } else if (event.srcElement) {\n    target = event.srcElement;\n  }\n\n  if (!(target instanceof Element)) {\n    return null;\n  }\n\n  if (target.nodeType != null && target.nodeType == 3) {\n    // defeat Safari bug\n    target = target.parentNode;\n    if (!(target instanceof Element)) {\n      return null;\n    }\n  }\n\n  return target;\n}\n\n/**\n * Check if given element contains given parent somewhere in the DOM tree.\n *\n * @param element - The element to be tested.\n * @param parent - The ancestor (not necessarily parent) of the element.\n *\n * @returns True if parent is an ancestor of the element, false otherwise.\n */\nexport function hasParent(element: Element, parent: Element): boolean {\n  let elem: Node = element;\n\n  while (elem) {\n    if (elem === parent) {\n      return true;\n    } else if (elem.parentNode) {\n      elem = elem.parentNode;\n    } else {\n      return false;\n    }\n  }\n\n  return false;\n}\n\nexport const option = {\n  /**\n   * Convert a value into a boolean.\n   *\n   * @param value - Value to be converted intoboolean, a function will be executed as `(() => unknown)`.\n   * @param defaultValue - If the value or the return value of the function == null then this will be returned.\n   *\n   * @returns Corresponding boolean value, if none then the default value, if none then null.\n   */\n  asBoolean(value: unknown, defaultValue?: boolean): boolean | null {\n    if (typeof value == \"function\") {\n      value = value();\n    }\n\n    if (value != null) {\n      return value != false;\n    }\n\n    return defaultValue || null;\n  },\n\n  /**\n   * Convert a value into a number.\n   *\n   * @param value - Value to be converted intonumber, a function will be executed as `(() => unknown)`.\n   * @param defaultValue - If the value or the return value of the function == null then this will be returned.\n   *\n   * @returns Corresponding **boxed** number value, if none then the default value, if none then null.\n   */\n  asNumber(value: unknown, defaultValue?: number): number | null {\n    if (typeof value == \"function\") {\n      value = value();\n    }\n\n    if (value != null) {\n      return Number(value) || defaultValue || null;\n    }\n\n    return defaultValue || null;\n  },\n\n  /**\n   * Convert a value into a string.\n   *\n   * @param value - Value to be converted intostring, a function will be executed as `(() => unknown)`.\n   * @param defaultValue - If the value or the return value of the function == null then this will be returned.\n   *\n   * @returns Corresponding **boxed** string value, if none then the default value, if none then null.\n   */\n  asString(value: unknown, defaultValue?: string): string | null {\n    if (typeof value == \"function\") {\n      value = value();\n    }\n\n    if (value != null) {\n      return String(value);\n    }\n\n    return defaultValue || null;\n  },\n\n  /**\n   * Convert a value into a size.\n   *\n   * @param value - Value to be converted intosize, a function will be executed as `(() => unknown)`.\n   * @param defaultValue - If the value or the return value of the function == null then this will be returned.\n   *\n   * @returns Corresponding string value (number + 'px'), if none then the default value, if none then null.\n   */\n  asSize(value: unknown, defaultValue?: string): string | null {\n    if (typeof value == \"function\") {\n      value = value();\n    }\n\n    if (isString(value)) {\n      return value;\n    } else if (isNumber(value)) {\n      return value + \"px\";\n    } else {\n      return defaultValue || null;\n    }\n  },\n\n  /**\n   * Convert a value into a DOM Element.\n   *\n   * @param value - Value to be converted into DOM Element, a function will be executed as `(() => unknown)`.\n   * @param defaultValue - If the value or the return value of the function == null then this will be returned.\n   *\n   * @returns The DOM Element, if none then the default value, if none then null.\n   */\n  asElement<T extends Node>(\n    value: T | (() => T | undefined) | undefined,\n    defaultValue: T\n  ): T | null {\n    if (typeof value == \"function\") {\n      value = value();\n    }\n\n    return value || defaultValue || null;\n  }\n};\n\n/**\n * Convert hex color string into RGB color object.\n *\n * @remarks\n * {@link http://stackoverflow.com/questions/5623838/rgb-to-hex-and-hex-to-rgb}\n *\n * @param hex - Hex color string (3 or 6 digits, with or without #).\n *\n * @returns RGB color object.\n */\nexport function hexToRGB(hex: string): RGB | null {\n  let result;\n  switch (hex.length) {\n    case 3:\n    case 4:\n      result = shortHexRE.exec(hex);\n      return result\n        ? {\n            r: parseInt(result[1] + result[1], 16),\n            g: parseInt(result[2] + result[2], 16),\n            b: parseInt(result[3] + result[3], 16)\n          }\n        : null;\n    case 6:\n    case 7:\n      result = fullHexRE.exec(hex);\n      return result\n        ? {\n            r: parseInt(result[1], 16),\n            g: parseInt(result[2], 16),\n            b: parseInt(result[3], 16)\n          }\n        : null;\n    default:\n      return null;\n  }\n}\n\n/**\n * This function takes string color in hex or RGB format and adds the opacity, RGBA is passed through unchanged.\n *\n * @param color - The color string (hex, RGB, RGBA).\n * @param opacity - The new opacity.\n *\n * @returns RGBA string, for example 'rgba(255, 0, 127, 0.3)'.\n */\nexport function overrideOpacity(color: string, opacity: number): string {\n  if (color.indexOf(\"rgba\") !== -1) {\n    return color;\n  } else if (color.indexOf(\"rgb\") !== -1) {\n    const rgb = color\n      .substr(color.indexOf(\"(\") + 1)\n      .replace(\")\", \"\")\n      .split(\",\");\n    return \"rgba(\" + rgb[0] + \",\" + rgb[1] + \",\" + rgb[2] + \",\" + opacity + \")\";\n  } else {\n    const rgb = hexToRGB(color);\n    if (rgb == null) {\n      return color;\n    } else {\n      return \"rgba(\" + rgb.r + \",\" + rgb.g + \",\" + rgb.b + \",\" + opacity + \")\";\n    }\n  }\n}\n\n/**\n * Convert RGB \\<0, 255\\> into hex color string.\n *\n * @param red - Red channel.\n * @param green - Green channel.\n * @param blue - Blue channel.\n *\n * @returns Hex color string (for example: '#0acdc0').\n */\nexport function RGBToHex(red: number, green: number, blue: number): string {\n  return (\n    \"#\" + ((1 << 24) + (red << 16) + (green << 8) + blue).toString(16).slice(1)\n  );\n}\n\nexport interface ColorObject {\n  background?: string;\n  border?: string;\n  hover?:\n    | string\n    | {\n        border?: string;\n        background?: string;\n      };\n  highlight?:\n    | string\n    | {\n        border?: string;\n        background?: string;\n      };\n}\nexport interface FullColorObject {\n  background: string;\n  border: string;\n  hover: {\n    border: string;\n    background: string;\n  };\n  highlight: {\n    border: string;\n    background: string;\n  };\n}\n\nexport function parseColor(inputColor: string): FullColorObject;\nexport function parseColor(inputColor: FullColorObject): FullColorObject;\nexport function parseColor(inputColor: ColorObject): ColorObject;\nexport function parseColor(\n  inputColor: ColorObject,\n  defaultColor: FullColorObject\n): FullColorObject;\n/**\n * Parse a color property into an object with border, background, and highlight colors.\n *\n * @param inputColor - Shorthand color string or input color object.\n * @param defaultColor - Full color object to fill in missing values in inputColor.\n *\n * @returns Color object.\n */\nexport function parseColor(\n  inputColor: ColorObject | string,\n  defaultColor?: FullColorObject\n): ColorObject | FullColorObject {\n  if (isString(inputColor)) {\n    let colorStr: string = inputColor;\n    if (isValidRGB(colorStr)) {\n      const rgb = colorStr\n        .substr(4)\n        .substr(0, colorStr.length - 5)\n        .split(\",\")\n        .map(function(value): number {\n          return parseInt(value);\n        });\n      colorStr = RGBToHex(rgb[0], rgb[1], rgb[2]);\n    }\n    if (isValidHex(colorStr) === true) {\n      const hsv = hexToHSV(colorStr);\n      const lighterColorHSV = {\n        h: hsv.h,\n        s: hsv.s * 0.8,\n        v: Math.min(1, hsv.v * 1.02)\n      };\n      const darkerColorHSV = {\n        h: hsv.h,\n        s: Math.min(1, hsv.s * 1.25),\n        v: hsv.v * 0.8\n      };\n      const darkerColorHex = HSVToHex(\n        darkerColorHSV.h,\n        darkerColorHSV.s,\n        darkerColorHSV.v\n      );\n      const lighterColorHex = HSVToHex(\n        lighterColorHSV.h,\n        lighterColorHSV.s,\n        lighterColorHSV.v\n      );\n      return {\n        background: colorStr,\n        border: darkerColorHex,\n        highlight: {\n          background: lighterColorHex,\n          border: darkerColorHex\n        },\n        hover: {\n          background: lighterColorHex,\n          border: darkerColorHex\n        }\n      };\n    } else {\n      return {\n        background: colorStr,\n        border: colorStr,\n        highlight: {\n          background: colorStr,\n          border: colorStr\n        },\n        hover: {\n          background: colorStr,\n          border: colorStr\n        }\n      };\n    }\n  } else {\n    if (defaultColor) {\n      const color: FullColorObject = {\n        background: inputColor.background || defaultColor.background,\n        border: inputColor.border || defaultColor.border,\n        highlight: isString(inputColor.highlight)\n          ? {\n              border: inputColor.highlight,\n              background: inputColor.highlight\n            }\n          : {\n              background:\n                (inputColor.highlight && inputColor.highlight.background) ||\n                defaultColor.highlight.background,\n              border:\n                (inputColor.highlight && inputColor.highlight.border) ||\n                defaultColor.highlight.border\n            },\n        hover: isString(inputColor.hover)\n          ? {\n              border: inputColor.hover,\n              background: inputColor.hover\n            }\n          : {\n              border:\n                (inputColor.hover && inputColor.hover.border) ||\n                defaultColor.hover.border,\n              background:\n                (inputColor.hover && inputColor.hover.background) ||\n                defaultColor.hover.background\n            }\n      };\n      return color;\n    } else {\n      const color: ColorObject = {\n        background: inputColor.background || undefined,\n        border: inputColor.border || undefined,\n        highlight: isString(inputColor.highlight)\n          ? {\n              border: inputColor.highlight,\n              background: inputColor.highlight\n            }\n          : {\n              background:\n                (inputColor.highlight && inputColor.highlight.background) ||\n                undefined,\n              border:\n                (inputColor.highlight && inputColor.highlight.border) ||\n                undefined\n            },\n        hover: isString(inputColor.hover)\n          ? {\n              border: inputColor.hover,\n              background: inputColor.hover\n            }\n          : {\n              border:\n                (inputColor.hover && inputColor.hover.border) || undefined,\n              background:\n                (inputColor.hover && inputColor.hover.background) || undefined\n            }\n      };\n      return color;\n    }\n  }\n}\n\n/**\n * Convert RGB \\<0, 255\\> into HSV object.\n *\n * @remarks\n * {@link http://www.javascripter.net/faq/rgb2hsv.htm}\n *\n * @param red - Red channel.\n * @param green - Green channel.\n * @param blue - Blue channel.\n *\n * @returns HSV color object.\n */\nexport function RGBToHSV(red: number, green: number, blue: number): HSV {\n  red = red / 255;\n  green = green / 255;\n  blue = blue / 255;\n  const minRGB = Math.min(red, Math.min(green, blue));\n  const maxRGB = Math.max(red, Math.max(green, blue));\n\n  // Black-gray-white\n  if (minRGB === maxRGB) {\n    return { h: 0, s: 0, v: minRGB };\n  }\n\n  // Colors other than black-gray-white:\n  const d =\n    red === minRGB ? green - blue : blue === minRGB ? red - green : blue - red;\n  const h = red === minRGB ? 3 : blue === minRGB ? 1 : 5;\n  const hue = (60 * (h - d / (maxRGB - minRGB))) / 360;\n  const saturation = (maxRGB - minRGB) / maxRGB;\n  const value = maxRGB;\n  return { h: hue, s: saturation, v: value };\n}\n\ninterface CSSStyles {\n  [key: string]: string;\n}\nconst cssUtil = {\n  // split a string with css styles into an object with key/values\n  split(cssText: string): CSSStyles {\n    const styles: CSSStyles = {};\n\n    cssText.split(\";\").forEach((style): void => {\n      if (style.trim() != \"\") {\n        const parts = style.split(\":\");\n        const key = parts[0].trim();\n        const value = parts[1].trim();\n        styles[key] = value;\n      }\n    });\n\n    return styles;\n  },\n\n  // build a css text string from an object with key/values\n  join(styles: CSSStyles): string {\n    return Object.keys(styles)\n      .map(function(key): string {\n        return key + \": \" + styles[key];\n      })\n      .join(\"; \");\n  }\n};\n\n/**\n * Append a string with css styles to an element.\n *\n * @param element - The element that will receive new styles.\n * @param cssText - The styles to be appended.\n */\nexport function addCssText(element: HTMLElement, cssText: string): void {\n  const currentStyles = cssUtil.split(element.style.cssText);\n  const newStyles = cssUtil.split(cssText);\n  const styles = {\n    ...currentStyles,\n    ...newStyles\n  };\n\n  element.style.cssText = cssUtil.join(styles);\n}\n\n/**\n * Remove a string with css styles from an element.\n *\n * @param element - The element from which styles should be removed.\n * @param cssText - The styles to be removed.\n */\nexport function removeCssText(element: HTMLElement, cssText: string): void {\n  const styles = cssUtil.split(element.style.cssText);\n  const removeStyles = cssUtil.split(cssText);\n\n  for (const key in removeStyles) {\n    if (Object.prototype.hasOwnProperty.call(removeStyles, key)) {\n      delete styles[key];\n    }\n  }\n\n  element.style.cssText = cssUtil.join(styles);\n}\n\n/**\n * Convert HSV \\<0, 1\\> into RGB color object.\n *\n * @remarks\n * {@link https://gist.github.com/mjijackson/5311256}\n *\n * @param h - Hue.\n * @param s - Saturation.\n * @param v - Value.\n *\n * @returns RGB color object.\n */\nexport function HSVToRGB(h: number, s: number, v: number): RGB {\n  let r: undefined | number;\n  let g: undefined | number;\n  let b: undefined | number;\n\n  const i = Math.floor(h * 6);\n  const f = h * 6 - i;\n  const p = v * (1 - s);\n  const q = v * (1 - f * s);\n  const t = v * (1 - (1 - f) * s);\n\n  switch (i % 6) {\n    case 0:\n      (r = v), (g = t), (b = p);\n      break;\n    case 1:\n      (r = q), (g = v), (b = p);\n      break;\n    case 2:\n      (r = p), (g = v), (b = t);\n      break;\n    case 3:\n      (r = p), (g = q), (b = v);\n      break;\n    case 4:\n      (r = t), (g = p), (b = v);\n      break;\n    case 5:\n      (r = v), (g = p), (b = q);\n      break;\n  }\n\n  return {\n    r: Math.floor((r as number) * 255),\n    g: Math.floor((g as number) * 255),\n    b: Math.floor((b as number) * 255)\n  };\n}\n\n/**\n * Convert HSV \\<0, 1\\> into hex color string.\n *\n * @param h - Hue.\n * @param s - Saturation.\n * @param v - Value.\n *\n * @returns Hex color string.\n */\nexport function HSVToHex(h: number, s: number, v: number): string {\n  const rgb = HSVToRGB(h, s, v);\n  return RGBToHex(rgb.r, rgb.g, rgb.b);\n}\n\n/**\n * Convert hex color string into HSV \\<0, 1\\>.\n *\n * @param hex - Hex color string.\n *\n * @returns HSV color object.\n */\nexport function hexToHSV(hex: string): HSV {\n  const rgb = hexToRGB(hex);\n  if (!rgb) {\n    throw new TypeError(`'${hex}' is not a valid color.`);\n  }\n  return RGBToHSV(rgb.r, rgb.g, rgb.b);\n}\n\n/**\n * Validate hex color string.\n *\n * @param hex - Unknown string that may contain a color.\n *\n * @returns True if the string is valid, false otherwise.\n */\nexport function isValidHex(hex: string): boolean {\n  const isOk = /(^#[0-9A-F]{6}$)|(^#[0-9A-F]{3}$)/i.test(hex);\n  return isOk;\n}\n\n/**\n * Validate RGB color string.\n *\n * @param rgb - Unknown string that may contain a color.\n *\n * @returns True if the string is valid, false otherwise.\n */\nexport function isValidRGB(rgb: string): boolean {\n  return rgbRE.test(rgb);\n}\n\n/**\n * Validate RGBA color string.\n *\n * @param rgba - Unknown string that may contain a color.\n *\n * @returns True if the string is valid, false otherwise.\n */\nexport function isValidRGBA(rgba: string): boolean {\n  return rgbaRE.test(rgba);\n}\n\n/**\n * This recursively redirects the prototype of JSON objects to the referenceObject.\n * This is used for default options.\n *\n * @param fields - Names of properties to be bridged.\n * @param referenceObject - The original object.\n *\n * @returns A new object inheriting from the referenceObject.\n */\nexport function selectiveBridgeObject<F extends string, V>(\n  fields: F[],\n  referenceObject: Record<F, V>\n): Record<F, V> | null {\n  if (referenceObject !== null && typeof referenceObject === \"object\") {\n    // !!! typeof null === 'object'\n    const objectTo = Object.create(referenceObject);\n    for (let i = 0; i < fields.length; i++) {\n      if (Object.prototype.hasOwnProperty.call(referenceObject, fields[i])) {\n        if (typeof referenceObject[fields[i]] == \"object\") {\n          objectTo[fields[i]] = bridgeObject(referenceObject[fields[i]]);\n        }\n      }\n    }\n    return objectTo;\n  } else {\n    return null;\n  }\n}\n\nexport function bridgeObject<T extends object>(referenceObject: T): T;\nexport function bridgeObject<T>(referenceObject: T): null;\n/**\n * This recursively redirects the prototype of JSON objects to the referenceObject.\n * This is used for default options.\n *\n * @param referenceObject - The original object.\n *\n * @returns The Element if the referenceObject is an Element, or a new object inheriting from the referenceObject.\n */\nexport function bridgeObject<T extends object | null>(\n  referenceObject: T\n): T | null {\n  if (referenceObject === null || typeof referenceObject !== \"object\") {\n    return null;\n  }\n\n  if (referenceObject instanceof Element) {\n    // Avoid bridging DOM objects\n    return referenceObject;\n  }\n\n  const objectTo = Object.create(referenceObject);\n  for (const i in referenceObject) {\n    if (Object.prototype.hasOwnProperty.call(referenceObject, i)) {\n      if (typeof (referenceObject as any)[i] == \"object\") {\n        objectTo[i] = bridgeObject((referenceObject as any)[i]);\n      }\n    }\n  }\n\n  return objectTo;\n}\n\n/**\n * This method provides a stable sort implementation, very fast for presorted data.\n *\n * @param a - The array to be sorted (in-place).\n * @param compare - An order comparator.\n *\n * @returns The argument a.\n */\nexport function insertSort<T>(a: T[], compare: (a: T, b: T) => number): T[] {\n  for (let i = 0; i < a.length; i++) {\n    const k = a[i];\n    let j;\n    for (j = i; j > 0 && compare(k, a[j - 1]) < 0; j--) {\n      a[j] = a[j - 1];\n    }\n    a[j] = k;\n  }\n  return a;\n}\n\n/**\n * This is used to set the options of subobjects in the options object.\n *\n * A requirement of these subobjects is that they have an 'enabled' element\n * which is optional for the user but mandatory for the program.\n *\n * The added value here of the merge is that option 'enabled' is set as required.\n *\n * @param mergeTarget - Either this.options or the options used for the groups.\n * @param options - Options.\n * @param option - Option key in the options argument.\n * @param globalOptions - Global options, passed in to determine value of option 'enabled'.\n */\nexport function mergeOptions(\n  mergeTarget: any,\n  options: any,\n  option: string,\n  globalOptions: any = {}\n): void {\n  // Local helpers\n  const isPresent = function(obj: any): boolean {\n    return obj !== null && obj !== undefined;\n  };\n\n  const isObject = function(obj: unknown): boolean {\n    return obj !== null && typeof obj === \"object\";\n  };\n\n  // https://stackoverflow.com/a/34491287/1223531\n  const isEmpty = function(obj: object): obj is {} {\n    for (const x in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, x)) {\n        return false;\n      }\n    }\n    return true;\n  };\n\n  // Guards\n  if (!isObject(mergeTarget)) {\n    throw new Error(\"Parameter mergeTarget must be an object\");\n  }\n\n  if (!isObject(options)) {\n    throw new Error(\"Parameter options must be an object\");\n  }\n\n  if (!isPresent(option)) {\n    throw new Error(\"Parameter option must have a value\");\n  }\n\n  if (!isObject(globalOptions)) {\n    throw new Error(\"Parameter globalOptions must be an object\");\n  }\n\n  //\n  // Actual merge routine, separated from main logic\n  // Only a single level of options is merged. Deeper levels are ref'd. This may actually be an issue.\n  //\n  const doMerge = function(target: any, options: any, option: string): void {\n    if (!isObject(target[option])) {\n      target[option] = {};\n    }\n\n    const src = options[option];\n    const dst = target[option];\n    for (const prop in src) {\n      if (Object.prototype.hasOwnProperty.call(src, prop)) {\n        dst[prop] = src[prop];\n      }\n    }\n  };\n\n  // Local initialization\n  const srcOption = options[option];\n  const globalPassed = isObject(globalOptions) && !isEmpty(globalOptions);\n  const globalOption = globalPassed ? globalOptions[option] : undefined;\n  const globalEnabled = globalOption ? globalOption.enabled : undefined;\n\n  /////////////////////////////////////////\n  // Main routine\n  /////////////////////////////////////////\n  if (srcOption === undefined) {\n    return; // Nothing to do\n  }\n\n  if (typeof srcOption === \"boolean\") {\n    if (!isObject(mergeTarget[option])) {\n      mergeTarget[option] = {};\n    }\n\n    mergeTarget[option].enabled = srcOption;\n    return;\n  }\n\n  if (srcOption === null && !isObject(mergeTarget[option])) {\n    // If possible, explicit copy from globals\n    if (isPresent(globalOption)) {\n      mergeTarget[option] = Object.create(globalOption);\n    } else {\n      return; // Nothing to do\n    }\n  }\n\n  if (!isObject(srcOption)) {\n    return;\n  }\n\n  //\n  // Ensure that 'enabled' is properly set. It is required internally\n  // Note that the value from options will always overwrite the existing value\n  //\n  let enabled = true; // default value\n\n  if (srcOption.enabled !== undefined) {\n    enabled = srcOption.enabled;\n  } else {\n    // Take from globals, if present\n    if (globalEnabled !== undefined) {\n      enabled = globalOption.enabled;\n    }\n  }\n\n  doMerge(mergeTarget, options, option);\n  mergeTarget[option].enabled = enabled;\n}\n\nexport function binarySearchCustom<\n  O extends object,\n  K1 extends keyof O,\n  K2 extends keyof O[K1]\n>(\n  orderedItems: O[],\n  comparator: (v: O[K1][K2]) => -1 | 0 | 1,\n  field: K1,\n  field2: K2\n): number;\nexport function binarySearchCustom<O extends object, K1 extends keyof O>(\n  orderedItems: O[],\n  comparator: (v: O[K1]) => -1 | 0 | 1,\n  field: K1\n): number;\n/**\n * This function does a binary search for a visible item in a sorted list. If we find a visible item, the code that uses\n * this function will then iterate in both directions over this sorted list to find all visible items.\n *\n * @param orderedItems - Items ordered by start.\n * @param comparator - -1 is lower, 0 is equal, 1 is higher.\n * @param field - Property name on an item (That is item[field]).\n * @param field2 - Second property name on an item (That is item[field][field2]).\n *\n * @returns Index of the found item or -1 if nothing was found.\n */\nexport function binarySearchCustom(\n  orderedItems: any[],\n  comparator: (v: unknown) => -1 | 0 | 1,\n  field: string,\n  field2?: string\n): number {\n  const maxIterations = 10000;\n  let iteration = 0;\n  let low = 0;\n  let high = orderedItems.length - 1;\n\n  while (low <= high && iteration < maxIterations) {\n    const middle = Math.floor((low + high) / 2);\n\n    const item = orderedItems[middle];\n    const value = field2 === undefined ? item[field] : item[field][field2];\n\n    const searchResult = comparator(value);\n    if (searchResult == 0) {\n      // jihaa, found a visible item!\n      return middle;\n    } else if (searchResult == -1) {\n      // it is too small --> increase low\n      low = middle + 1;\n    } else {\n      // it is too big --> decrease high\n      high = middle - 1;\n    }\n\n    iteration++;\n  }\n\n  return -1;\n}\n\n/**\n * This function does a binary search for a specific value in a sorted array.\n * If it does not exist but is in between of two values, we return either the\n * one before or the one after, depending on user input If it is found, we\n * return the index, else -1.\n *\n * @param orderedItems - Sorted array.\n * @param target - The searched value.\n * @param field - Name of the property in items to be searched.\n * @param sidePreference - If the target is between two values, should the index of the before or the after be returned?\n * @param comparator - An optional comparator, returning -1, 0, 1 for \\<, ===, \\>.\n *\n * @returns The index of found value or -1 if nothing was found.\n */\nexport function binarySearchValue<T extends string>(\n  orderedItems: { [K in T]: number }[],\n  target: number,\n  field: T,\n  sidePreference: \"before\" | \"after\",\n  comparator?: (a: number, b: number) => -1 | 0 | 1\n): number {\n  const maxIterations = 10000;\n  let iteration = 0;\n  let low = 0;\n  let high = orderedItems.length - 1;\n  let prevValue;\n  let value;\n  let nextValue;\n  let middle;\n\n  comparator =\n    comparator != undefined\n      ? comparator\n      : function(a: number, b: number): -1 | 0 | 1 {\n          return a == b ? 0 : a < b ? -1 : 1;\n        };\n\n  while (low <= high && iteration < maxIterations) {\n    // get a new guess\n    middle = Math.floor(0.5 * (high + low));\n    prevValue = orderedItems[Math.max(0, middle - 1)][field];\n    value = orderedItems[middle][field];\n    nextValue =\n      orderedItems[Math.min(orderedItems.length - 1, middle + 1)][field];\n\n    if (comparator(value, target) == 0) {\n      // we found the target\n      return middle;\n    } else if (\n      comparator(prevValue, target) < 0 &&\n      comparator(value, target) > 0\n    ) {\n      // target is in between of the previous and the current\n      return sidePreference == \"before\" ? Math.max(0, middle - 1) : middle;\n    } else if (\n      comparator(value, target) < 0 &&\n      comparator(nextValue, target) > 0\n    ) {\n      // target is in between of the current and the next\n      return sidePreference == \"before\"\n        ? middle\n        : Math.min(orderedItems.length - 1, middle + 1);\n    } else {\n      // didnt find the target, we need to change our boundaries.\n      if (comparator(value, target) < 0) {\n        // it is too small --> increase low\n        low = middle + 1;\n      } else {\n        // it is too big --> decrease high\n        high = middle - 1;\n      }\n    }\n    iteration++;\n  }\n\n  // didnt find anything. Return -1.\n  return -1;\n}\n\n/*\n * Easing Functions.\n * Only considering the t value for the range [0, 1] => [0, 1].\n *\n * Inspiration: from http://gizma.com/easing/\n * https://gist.github.com/gre/1650294\n */\nexport const easingFunctions = {\n  /**\n   * Provides no easing and no acceleration.\n   *\n   * @param t - Time.\n   *\n   * @returns Value at time t.\n   */\n  linear(t: number): number {\n    return t;\n  },\n\n  /**\n   * Accelerate from zero velocity.\n   *\n   * @param t - Time.\n   *\n   * @returns Value at time t.\n   */\n  easeInQuad(t: number): number {\n    return t * t;\n  },\n\n  /**\n   * Decelerate to zero velocity.\n   *\n   * @param t - Time.\n   *\n   * @returns Value at time t.\n   */\n  easeOutQuad(t: number): number {\n    return t * (2 - t);\n  },\n\n  /**\n   * Accelerate until halfway, then decelerate.\n   *\n   * @param t - Time.\n   *\n   * @returns Value at time t.\n   */\n  easeInOutQuad(t: number): number {\n    return t < 0.5 ? 2 * t * t : -1 + (4 - 2 * t) * t;\n  },\n\n  /**\n   * Accelerate from zero velocity.\n   *\n   * @param t - Time.\n   *\n   * @returns Value at time t.\n   */\n  easeInCubic(t: number): number {\n    return t * t * t;\n  },\n\n  /**\n   * Decelerate to zero velocity.\n   *\n   * @param t - Time.\n   *\n   * @returns Value at time t.\n   */\n  easeOutCubic(t: number): number {\n    return --t * t * t + 1;\n  },\n\n  /**\n   * Accelerate until halfway, then decelerate.\n   *\n   * @param t - Time.\n   *\n   * @returns Value at time t.\n   */\n  easeInOutCubic(t: number): number {\n    return t < 0.5 ? 4 * t * t * t : (t - 1) * (2 * t - 2) * (2 * t - 2) + 1;\n  },\n\n  /**\n   * Accelerate from zero velocity.\n   *\n   * @param t - Time.\n   *\n   * @returns Value at time t.\n   */\n  easeInQuart(t: number): number {\n    return t * t * t * t;\n  },\n\n  /**\n   * Decelerate to zero velocity.\n   *\n   * @param t - Time.\n   *\n   * @returns Value at time t.\n   */\n  easeOutQuart(t: number): number {\n    return 1 - --t * t * t * t;\n  },\n\n  /**\n   * Accelerate until halfway, then decelerate.\n   *\n   * @param t - Time.\n   *\n   * @returns Value at time t.\n   */\n  easeInOutQuart(t: number): number {\n    return t < 0.5 ? 8 * t * t * t * t : 1 - 8 * --t * t * t * t;\n  },\n\n  /**\n   * Accelerate from zero velocity.\n   *\n   * @param t - Time.\n   *\n   * @returns Value at time t.\n   */\n  easeInQuint(t: number): number {\n    return t * t * t * t * t;\n  },\n\n  /**\n   * Decelerate to zero velocity.\n   *\n   * @param t - Time.\n   *\n   * @returns Value at time t.\n   */\n  easeOutQuint(t: number): number {\n    return 1 + --t * t * t * t * t;\n  },\n\n  /**\n   * Accelerate until halfway, then decelerate.\n   *\n   * @param t - Time.\n   *\n   * @returns Value at time t.\n   */\n  easeInOutQuint(t: number): number {\n    return t < 0.5 ? 16 * t * t * t * t * t : 1 + 16 * --t * t * t * t * t;\n  }\n};\n\n/**\n * Experimentaly compute the width of the scrollbar for this browser.\n *\n * @returns The width in pixels.\n */\nexport function getScrollBarWidth(): number {\n  const inner = document.createElement(\"p\");\n  inner.style.width = \"100%\";\n  inner.style.height = \"200px\";\n\n  const outer = document.createElement(\"div\");\n  outer.style.position = \"absolute\";\n  outer.style.top = \"0px\";\n  outer.style.left = \"0px\";\n  outer.style.visibility = \"hidden\";\n  outer.style.width = \"200px\";\n  outer.style.height = \"150px\";\n  outer.style.overflow = \"hidden\";\n  outer.appendChild(inner);\n\n  document.body.appendChild(outer);\n  const w1 = inner.offsetWidth;\n  outer.style.overflow = \"scroll\";\n  let w2 = inner.offsetWidth;\n  if (w1 == w2) {\n    w2 = outer.clientWidth;\n  }\n\n  document.body.removeChild(outer);\n\n  return w1 - w2;\n}\n\n// @TODO: This doesn't work properly.\n// It works only for single property objects,\n// otherwise it combines all of the types in a union.\n// export function topMost<K1 extends string, V1> (\n//   pile: Record<K1, undefined | V1>[],\n//   accessors: K1 | [K1]\n// ): undefined | V1\n// export function topMost<K1 extends string, K2 extends string, V1, V2> (\n//   pile: Record<K1, undefined | V1 | Record<K2, undefined | V2>>[],\n//   accessors: [K1, K2]\n// ): undefined | V1 | V2\n// export function topMost<K1 extends string, K2 extends string, K3 extends string, V1, V2, V3> (\n//   pile: Record<K1, undefined | V1 | Record<K2, undefined | V2 | Record<K3, undefined | V3>>>[],\n//   accessors: [K1, K2, K3]\n// ): undefined | V1 | V2 | V3\n/**\n * Get the top most property value from a pile of objects.\n *\n * @param pile - Array of objects, no required format.\n * @param accessors - Array of property names.\n * For example `object['foo']['bar']` → `['foo', 'bar']`.\n *\n * @returns Value of the property with given accessors path from the first pile item where it's not undefined.\n */\nexport function topMost(pile: any, accessors: any): any {\n  let candidate;\n  if (!Array.isArray(accessors)) {\n    accessors = [accessors];\n  }\n  for (const member of pile) {\n    if (member) {\n      candidate = member[accessors[0]];\n      for (let i = 1; i < accessors.length; i++) {\n        if (candidate) {\n          candidate = candidate[accessors[i]];\n        }\n      }\n      if (typeof candidate !== \"undefined\") {\n        break;\n      }\n    }\n  }\n  return candidate;\n}\n","/**\n * Seedable, fast and reasonably good (not crypto but more than okay for our\n * needs) random number generator.\n *\n * @remarks\n * Adapted from {@link https://web.archive.org/web/20110429100736/http://baagoe.com:80/en/RandomMusings/javascript}.\n * Original algorithm created by Johannes Baagøe \\<baagoe\\@baagoe.com\\> in 2010.\n */\n\n/**\n * Random number generator.\n */\nexport interface RNG {\n  /** Returns \\<0, 1). Faster than [[fract53]]. */\n  (): number;\n  /** Returns \\<0, 1). Provides more precise data. */\n  fract53(): number;\n  /** Returns \\<0, 2^32). */\n  uint32(): number;\n\n  /** The algorithm gehind this instance. */\n  algorithm: string;\n  /** The seed used to seed this instance. */\n  seed: Mashable[];\n  /** The version of this instance. */\n  version: string;\n}\n\n/**\n * Create a seeded pseudo random generator based on Alea by Johannes Baagøe.\n *\n * @param seed - All supplied arguments will be used as a seed. In case nothing\n * is supplied the current time will be used to seed the generator.\n *\n * @returns A ready to use seeded generator.\n */\nexport function Alea(...seed: Mashable[]): RNG {\n  return AleaImplementation(seed.length ? seed : [Date.now()]);\n}\n\n/**\n * An implementation of [[Alea]] without user input validation.\n *\n * @param seed - The data that will be used to seed the generator.\n *\n * @returns A ready to use seeded generator.\n */\nfunction AleaImplementation(seed: Mashable[]): RNG {\n  let [s0, s1, s2] = mashSeed(seed);\n  let c = 1;\n\n  const random: RNG = (): number => {\n    const t = 2091639 * s0 + c * 2.3283064365386963e-10; // 2^-32\n    s0 = s1;\n    s1 = s2;\n    return (s2 = t - (c = t | 0));\n  };\n\n  random.uint32 = (): number => random() * 0x100000000; // 2^32\n\n  random.fract53 = (): number =>\n    random() + ((random() * 0x200000) | 0) * 1.1102230246251565e-16; // 2^-53\n\n  random.algorithm = \"Alea\";\n  random.seed = seed;\n  random.version = \"0.9\";\n\n  return random;\n}\n\n/**\n * Turn arbitrary data into values [[AleaImplementation]] can use to generate\n * random numbers.\n *\n * @param seed - Arbitrary data that will be used as the seed.\n *\n * @returns Three numbers to use as initial values for [[AleaImplementation]].\n */\nfunction mashSeed(...seed: Mashable[]): [number, number, number] {\n  const mash = Mash();\n\n  let s0 = mash(\" \");\n  let s1 = mash(\" \");\n  let s2 = mash(\" \");\n\n  for (let i = 0; i < seed.length; i++) {\n    s0 -= mash(seed[i]);\n    if (s0 < 0) {\n      s0 += 1;\n    }\n    s1 -= mash(seed[i]);\n    if (s1 < 0) {\n      s1 += 1;\n    }\n    s2 -= mash(seed[i]);\n    if (s2 < 0) {\n      s2 += 1;\n    }\n  }\n\n  return [s0, s1, s2];\n}\n\n/**\n * Values of these types can be used as a seed.\n */\nexport type Mashable = number | string | boolean | object | bigint;\n\n/**\n * Create a new mash function.\n *\n * @returns A nonpure function that takes arbitrary [[Mashable]] data and turns\n * them into numbers.\n */\nfunction Mash(): (data: Mashable) => number {\n  let n = 0xefc8249d;\n\n  return function(data): number {\n    const string = data.toString();\n    for (let i = 0; i < string.length; i++) {\n      n += string.charCodeAt(i);\n      let h = 0.02519603282416938 * n;\n      n = h >>> 0;\n      h -= n;\n      h *= n;\n      n = h >>> 0;\n      h -= n;\n      n += h * 0x100000000; // 2^32\n    }\n    return (n >>> 0) * 2.3283064365386963e-10; // 2^-32\n  };\n}\n"],"names":["ASPDateRegex","fullHexRE","shortHexRE","rgbRE","rgbaRE","isNumber","value","Number","isString","String","isObject","copyOrDelete","a","b","prop","allowDeletion","doDeletion","undefined","extend","Object","assign","deepExtend","protoExtend","prototype","hasOwnProperty","call","getPrototypeOf","Array","isArray","slice","toArray","values","option","asBoolean","defaultValue","asNumber","asString","asSize","asElement","hexToRGB","hex","result","length","exec","r","parseInt","g","RGBToHex","red","green","blue","toString","RGBToHSV","minRGB","Math","min","maxRGB","max","h","s","v","cssUtil","[object Object]","cssText","styles","split","forEach","style","trim","parts","key","join","keys","map","HSVToRGB","i","floor","f","p","q","t","HSVToHex","rgb","hexToHSV","TypeError","isValidHex","test","isValidRGB","bridgeObject","referenceObject","Element","objectTo","create","easingFunctions","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","seed","s0","s1","s2","mash","n","data","string","charCodeAt","Mash","mashSeed","c","random","uint32","fract53","algorithm","version","AleaImplementation","Date","now","elem","classNames","classes","className","newClasses","concat","filter","indexOf","element","action","listener","useCapture","addEventListener","navigator","userAgent","attachEvent","orderedItems","comparator","field","field2","iteration","low","high","middle","item","searchResult","target","sidePreference","prevValue","nextValue","arr","newValue","len","fillIfDefined","aProp","bProp","object","callback","getBoundingClientRect","left","right","top","inner","document","createElement","width","height","outer","position","visibility","overflow","appendChild","body","w1","offsetWidth","w2","clientWidth","removeChild","event","window","srcElement","nodeType","parentNode","type","Boolean","parent","compare","k","j","isNaN","parse","rgba","mergeTarget","options","globalOptions","isPresent","obj","Error","srcOption","globalOption","x","isEmpty","globalEnabled","enabled","src","dst","doMerge","color","opacity","substr","replace","inputColor","defaultColor","colorStr","hsv","lighterColorHSV","darkerColorHSV","darkerColorHex","lighterColorHex","background","border","highlight","hover","preventDefault","returnValue","recursiveDOMDelete","DOMobject","hasChildNodes","child","firstChild","oldClasses","removeStyles","removeEventListener","detachEvent","fields","props","constructor","others","other","propsToExclude","push","fn","scheduled","requestAnimationFrame","pile","accessors","candidate","member"],"mappings":"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"}